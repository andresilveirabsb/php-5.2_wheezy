--- a/ext/standard/mail.c
+++ b/ext/standard/mail.c
@@ -216,6 +216,51 @@ PHPAPI int php_mail(char *to, char *subj
 	void (*sig_handler)() = NULL;
 #endif
 
+	/* Patched by Giam Teck Choon */
+	/* start add additional headers with self tweaking with reference to Steve Bennett's PHP mail() header patch at http://www.lancs.ac.uk/~steveb/php-mail-header-patch/ */
+	/* Many thanks to Stefan Esser from hardened-php.net to report a security issue regarding PHP_SELF in headers thus I have included an extra check for \n and \r string */
+	char *headers2=NULL;
+
+	if (PG(mail_extra_headers)) {
+		// add a header in the form
+		//	X-PHP-Script: <server_name><php_self> for [<forwarded_for>,]<remote-addr>
+		while(1) {
+			zval **server, **remote_addr, **forwarded_for, **php_self, **server_name;
+
+			if (zend_hash_find(&EG(symbol_table), "_SERVER", sizeof("_SERVER"), (void **) &server)==FAILURE)
+				break;
+			if (Z_TYPE_PP(server)!=IS_ARRAY)
+				break;
+			if (zend_hash_find(Z_ARRVAL_PP(server), "REMOTE_ADDR", sizeof("REMOTE_ADDR"), (void **) &remote_addr) == FAILURE)
+				break;
+			if (zend_hash_find(Z_ARRVAL_PP(server), "HTTP_X_FORWARDED_FOR", sizeof("HTTP_X_FORWARDED_FOR"), (void **) &forwarded_for) == FAILURE)
+				forwarded_for=NULL;
+			if (zend_hash_find(Z_ARRVAL_PP(server), "PHP_SELF", sizeof("PHP_SELF"), (void **) &php_self) == FAILURE)
+				break;
+			if (zend_hash_find(Z_ARRVAL_PP(server), "SERVER_NAME", sizeof("SERVER_NAME"), (void **) &server_name) == FAILURE)
+				break;
+			headers2 = emalloc(32+Z_STRLEN_PP(server_name)+Z_STRLEN_PP(php_self)
+				+(forwarded_for?Z_STRLEN_PP(forwarded_for)+2:0)
+				+Z_STRLEN_PP(remote_addr));
+			strcpy(headers2, "X-PHP-Script: ");
+			strcat(headers2, Z_STRVAL_PP(server_name));
+			if (strchr(Z_STRVAL_PP(php_self), '\n') != NULL || strchr(Z_STRVAL_PP(php_self), '\r') != NULL) {
+				php_error_docref(NULL TSRMLS_CC, E_WARNING, "Newline found in PHP_SELF variable which might cause possible injection '%s'", Z_STRVAL_PP(php_self));
+			}
+			else {
+				strcat(headers2, Z_STRVAL_PP(php_self));
+			}
+			strcat(headers2, " for ");
+			if (forwarded_for) {
+				strcat(headers2, Z_STRVAL_PP(forwarded_for));
+				strcat(headers2, ", ");
+			}
+			strcat(headers2, Z_STRVAL_PP(remote_addr));
+			break;
+		}
+		/* end add additional headers with self tweaking with reference to Steve Bennett's PHP mail() header patch at http://www.lancs.ac.uk/~steveb/php-mail-header-patch/ */
+	}
+
 	if (!sendmail_path) {
 #if (defined PHP_WIN32 || defined NETWARE)
 		/* handle old style win smtp sending */
@@ -278,6 +323,14 @@ PHPAPI int php_mail(char *to, char *subj
 #endif
 		fprintf(sendmail, "To: %s\n", to);
 		fprintf(sendmail, "Subject: %s\n", subject);
+		/* Patched by Giam Teck Choon */
+		/* start add additional headers with self tweaking with reference to Steve Bennett's PHP mail() header patch at http://www.lancs.ac.uk/~steveb/php-mail-header-patch/ */
+		/* Many thanks to Stefan Esser from hardened-php.net to report a security issue regarding PHP_SELF in headers thus I have included an extra check for \n and \r string */
+		if (headers2 != NULL) {
+			fprintf(sendmail, "%s\n", headers2);
+			efree(headers2);
+		}
+		/* end add additional headers with self tweaking with reference to Steve Bennett's PHP mail() header patch at http://www.lancs.ac.uk/~steveb/php-mail-header-patch/ */
 		if (headers != NULL) {
 			fprintf(sendmail, "%s\n", headers);
 		}
--- a/main/main.c
+++ b/main/main.c
@@ -461,6 +461,7 @@ PHP_INI_BEGIN()
 
 	STD_PHP_INI_ENTRY("realpath_cache_size",	"16K",		PHP_INI_SYSTEM,		OnUpdateLong,	realpath_cache_size_limit,	virtual_cwd_globals,	cwd_globals)
 	STD_PHP_INI_ENTRY("realpath_cache_ttl",		"120",		PHP_INI_SYSTEM,		OnUpdateLong,	realpath_cache_ttl,			virtual_cwd_globals,	cwd_globals)
+	STD_PHP_INI_BOOLEAN("mail_extra_headers", "1", PHP_INI_SYSTEM, OnUpdateBool, mail_extra_headers, php_core_globals, core_globals)
 PHP_INI_END()
 /* }}} */
 
--- a/main/php_globals.h
+++ b/main/php_globals.h
@@ -162,6 +162,8 @@ struct _php_core_globals {
 	long max_input_nesting_level;
 	zend_bool in_user_include;
 	zend_bool in_error_log;
+
+	zend_bool mail_extra_headers;
 };
 
 
